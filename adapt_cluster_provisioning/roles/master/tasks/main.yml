# Master tasks, except the ones we run as preparation
# Includes tool installation, postgres configuration, SGE and proFTPd install
---
- name: Setup postgres user
  user: name=postgres state=present

- name: Install system packages
  apt: pkg={{ item }} state=installed
  with_flattened:
    - ${master_packages}

- name: Install python libraries
  pip: name={{ item }} state=present
  with_flattened: master_pip_pkgs

# Slurm-drmaa
- name: Get slurm-drmaa source
  get_url: url={{ slurm_drmaa_url }} dest=/tmp/slurm-drmaa.tar.gz
- name: Unpack slurm-drmaa source
  command: tar xvfz slurm-drmaa.tar.gz chdir=/tmp
- name: Configure slurm-drmaa
  command: ./configure --with-slurm-inc=/usr/include/slurm --with-slurm-lib=/usr/lib 
           chdir=/tmp/{{ slurm_drmaa_pkg }}
- name: Make slurm-drmaa
  command: make chdir=/tmp/{{ slurm_drmaa_pkg }}
- name: Install slurm-drmaa
  command: make install chdir=/tmp/{{ slurm_drmaa_pkg }}

- name: Configure PostgreSQL
  lineinfile: dest=/etc/bash.bashrc line="export PATH=/usr/lib/postgresql/{{ postgres_version }}/bin:$PATH" state=present regexp="export PATH=/usr/lib/postgresql/{{ postgres_version }}/bin"

# proFTPd install
- name: Getting proFTPd
  get_url: url=ftp://ftp.tpnet.pl/pub/linux/proftpd/distrib/source/{{ proftpd_pkg }}.tar.gz dest=/tmp/{{ proftpd_pkg }}.tar.gz
- name: Untarring proFTPd source
  command: tar xvfz {{ proftpd_pkg }}.tar.gz chdir=/tmp
- name: Configuring makefile for proFTPd
  command: chdir=/tmp/{{ proftpd_pkg }} ./configure --prefix={{ proftpd_install_dir }} --disable-auth-file --disable-ncurses --disable-ident --disable-shadow --enable-openssl --with-modules=mod_sql:mod_sql_postgres:mod_sql_passwd --with-libraries=/usr/lib/postgresql/{{ postgres_version }}/lib
  environment:
    CFLAGS: -I/usr/include/postgresql
- name: Making proFTPd
  command: make chdir=/tmp/{{ proftpd_pkg }}
- name: Install proFTPd
  command: make install chdir=/tmp/{{ proftpd_pkg }}
- name: Cleaning up post making
  command: make clean chdir=/tmp/{{ proftpd_pkg }}

# NFS exports on master
- name: Add tools to NFS exports
  lineinfile: dest=/etc/exports
              regexp="{{ tool_path }}"
              state=present
              line="{{ tool_path }}              *(rw,sync,no_root_squash,no_subtree_check)"
- name: Add galaxy path to NFS exports
  lineinfile: dest=/etc/exports
              regexp="{{ galaxy_path }}"
              state=present
              line="{{ galaxy_path }}    *(rw,sync,no_root_squash,no_subtree_check)"
- name: Add data path to NFS exports if not has_fileserver
  lineinfile: dest=/etc/exports
              regexp="{{ data_path }}"
              state=present
              line="{{ data_path }}    *(rw,sync,no_root_squash,no_subtree_check)"
  when: has_fileserver is not defined or not has_fileserver
- name: Change data share ownership if not has_fileserver
  file: path={{ data_path }} owner=galaxy group=galaxy 
  when: has_fileserver is not defined or not has_fileserver

- name: Mount data volume when on separate fileserver
  lineinfile: "dest=/etc/fstab 'line={{ data_share }}     {{ data_path }}  nfs auto    0   0'"
  when: has_fileserver is defined and has_fileserver
