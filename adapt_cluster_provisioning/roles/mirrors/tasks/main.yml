---
# Role installs mirrors but also Ansible on master host

# prepare packages
- name: Install packages for mirror
  apt: pkg={{ item }} state=installed
  with_items: mirror_packages
- name: Install virtualenv
  pip: name=virtualenv state=present

# Install ansible
- name: Install ansible on master for worker installations
  pip: name=ansible state=present virtualenv=/home/admin/virtenvs/ansible
  notify: chown admin home
- name: Get latest stable ansible scripts from github
  git: repo=git://github.com/glormph/proteomics_configuration
       dest=/home/admin/proteomics_configuration
  notify: chown admin home
- name: Move hosts file to repo on host
  copy: src=inventory/hosts
        dest=/home/admin/proteomics_configuration/adapt_cluster_provisioning/inventory/hosts
  notify: chown admin home
- name: Move clusterdata to repo on host
  copy: src=inventory/cluster_data.yml
        dest=/home/admin/proteomics_configuration/adapt_cluster_provisioning/inventory/cluster_data.yml
  notify: chown admin home

# Apt mirror
- name: Creating apt mirror directory
  file: path=/mnt/mirrors/ubuntumirror mode=755 owner=root group=admin state=directory
- name: Setting keyring directory for apt mirror
  file: path=/home/mirrorkeyring state=directory
- name: Importing keyring for apt mirror
  command: gpg --no-default-keyring --keyring /home/mirrorkeyring/trustedkeys.gpg --import /usr/share/keyrings/ubuntu-archive-keyring.gpg
- name: Build apt mirror
  script: mirrorbuild.sh

# Source mirror
- name: Creating source dir for worker downloads
  file: path=/mnt/mirrors/source mode=755 owner=root group=admin state=directory
- name: Downloading source of XSD
  get_url: url={{xsd_location}}/{{xsd_package}} dest=/mnt/mirrors/source/{{ xsd_package }}
- name: Downloading source of Xerces
  get_url: url={{xerces_location}}/{{xerces_package}} dest=/mnt/mirrors/source/{{ xerces_package }}
- name: Downloading source of h5py
  get_url: url={{ h5py_location }}/{{ h5py_package }}.tar.gz dest=/mnt/mirrors/source/{{ h5py_package }}.tar.gz

# PyPI mirror
- name: Install pypi mirror downloader bandersnatch
  pip: name=bandersnatch state=present virtualenv=/home/admin/virtenvs/pypi_mirror
- name: Creating pypi mirror path
  file: path=/mnt/mirrors/pypimirror state=directory
- name: Installing bandersnatch.conf
  copy: src=bandersnatch.conf dest=/etc/bandersnatch.conf  
- name: Build PyPI mirror
  script: pypimirror_builder.sh

